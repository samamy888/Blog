import{_ as p,r as o,o as c,c as i,a as n,b as e,d as s,e as t}from"./app.abfb3fc9.js";const l={},r=n("h1",{id:"c-9\u3001c-10-\u7248\u672C\u65B0\u529F\u80FD\u7B46\u8A18",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#c-9\u3001c-10-\u7248\u672C\u65B0\u529F\u80FD\u7B46\u8A18","aria-hidden":"true"},"#"),s(" C#9\u3001C#10 \u7248\u672C\u65B0\u529F\u80FD\u7B46\u8A18")],-1),u=n("p",null,"\u6700\u8FD1\u4E3B\u7BA1\u554F\u5230.net core 3.x \u8DDF .net 6 \u8F49\u7248\u672C\u7684\u8A71\u6703\u6709\u4EC0\u9EBC\u5F71\u97FF\uFF0C \u7279\u5225\u4F86\u8A18\u9304\u9019\u7BC7\u6709\u7528\u5230\u7684\u65B0\u529F\u80FD\u3002",-1),d=n("h2",{id:"\u9810\u8A2D\u67B6\u69CB\u5C0D\u61C9\u7684c-\u7248\u672C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9810\u8A2D\u67B6\u69CB\u5C0D\u61C9\u7684c-\u7248\u672C","aria-hidden":"true"},"#"),s(" \u9810\u8A2D\u67B6\u69CB\u5C0D\u61C9\u7684C#\u7248\u672C")],-1),k=s("\u53C3\u8003"),m={href:"https://learn.microsoft.com/zh-tw/dotnet/csharp/language-reference/configure-language-version",target:"_blank",rel:"noopener noreferrer"},h=s("\u5B98\u65B9\u6587\u4EF6"),v=s(" \u8868\u683C \u53EF\u4EE5\u770B\u5230\u4E2D\u9593\u5DEE\u4E869\u8DDF10\u5169\u4EE3\uFF0C\u56E0\u6B64\u4EE5\u4E0B\u5167\u5BB9\u90FD\u6703\u8B1B\u89E3 C#9 \u8DDF C#10 \u7684\u65B0\u7279\u6027"),b=t(`<table><thead><tr><th>\u76EE\u6A19\u67B6\u69CB</th><th>version</th><th>C# \u8A9E\u8A00\u7248\u672C\u9810\u8A2D\u503C</th></tr></thead><tbody><tr><td>.NET</td><td>6.x</td><td>C# 10</td></tr><tr><td>.NET Core</td><td>3.x</td><td>C# 8.0</td></tr></tbody></table><h2 id="c-9" tabindex="-1"><a class="header-anchor" href="#c-9" aria-hidden="true">#</a> C#9</h2><h3 id="record" tabindex="-1"><a class="header-anchor" href="#record" aria-hidden="true">#</a> Record</h3><p>\u539F\u672CC#\u8981\u5275\u5EFA Immutable Class \u8981\u4F7F\u7528 <strong>{ get; init; }</strong> \u624D\u53EF\u4EE5</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token operator">!</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E86 Record \u4E4B\u5F8C\u53EF\u4EE5\u66F4\u5FEB\u901F\u5B8C\u6210</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> FirstName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> LastName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u9700\u8981clone\u4E26\u66F4\u6539\u67D0\u500B\u503C\u7684\u6642\u5019\uFF0C\u53EF\u4EE5\u4F7F\u7528 <strong>with</strong> \u904B\u7B97\u5F0F</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> FirstName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> LastName<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> PhoneNumbers <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Person</span> person1 <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">&quot;Nancy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Davolio&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> PhoneNumbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span></span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>person1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// output: Person { FirstName = Nancy, LastName = Davolio, PhoneNumbers = System.String[] }</span>

    <span class="token class-name">Person</span> person2 <span class="token operator">=</span> person1 <span class="token keyword">with</span> <span class="token punctuation">{</span> FirstName <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>person2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// output: Person { FirstName = John, LastName = Davolio, PhoneNumbers = System.String[] }</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>person1 <span class="token operator">==</span> person2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// output: False</span>

    person2 <span class="token operator">=</span> person1 <span class="token keyword">with</span> <span class="token punctuation">{</span> PhoneNumbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span></span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>person2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// output: Person { FirstName = Nancy, LastName = Davolio, PhoneNumbers = System.String[] }</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>person1 <span class="token operator">==</span> person2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// output: False</span>

    person2 <span class="token operator">=</span> person1 <span class="token keyword">with</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>person1 <span class="token operator">==</span> person2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// output: True</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6700\u4E0A\u5C64\u9673\u8FF0\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6700\u4E0A\u5C64\u9673\u8FF0\u5F0F" aria-hidden="true">#</a> \u6700\u4E0A\u5C64\u9673\u8FF0\u5F0F</h3><p>\u820A\u7248\u9700\u8981 namespace \u8207 class \u7B49\u7B49\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">HelloWorld</span>
<span class="token punctuation">{</span>
    <span class="token keyword">class</span> <span class="token class-name">Program</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u6A23\u4F5C\u696D\uFF0C\u65B0\u7248\u53EA\u9700\u8981\u5169\u884C\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u5BB6\u53EF\u4EE5\u53BB.net\u7684playground\u73A9\u73A9</p>`,15),g={href:"https://dotnetfiddle.net/",target:"_blank",rel:"noopener noreferrer"},w=s("https://dotnetfiddle.net/"),y=t(`<p>\u5728\u4E00\u4E9B\u5C0F\u7A0B\u5F0F\u4E0A\u7279\u5225\u65B9\u4FBF\uFF0C <s>\u611F\u89BA\u5728\u5B78Python</s></p><h3 id="\u6A21\u5F0F\u6BD4\u5C0D\u589E\u5F37\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F\u6BD4\u5C0D\u589E\u5F37\u529F\u80FD" aria-hidden="true">#</a> \u6A21\u5F0F\u6BD4\u5C0D\u589E\u5F37\u529F\u80FD</h3><p>\u53EF\u4EE5\u4F7F\u7528 is not \u6AA2\u67E5 Null\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8ABF\u6574\u548C\u5B8C\u6210\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u8ABF\u6574\u548C\u5B8C\u6210\u529F\u80FD" aria-hidden="true">#</a> \u8ABF\u6574\u548C\u5B8C\u6210\u529F\u80FD</h3><p>\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528new()\u5B8C\u6210\u521D\u59CB\u5316\uFF0C\u7B97\u662F\u5F88\u597D\u7528\u7684\u8A9E\u6CD5\u7CD6\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token class-name">List<span class="token punctuation">&lt;</span>WeatherObservation<span class="token punctuation">&gt;</span></span> _observations <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="c-10" tabindex="-1"><a class="header-anchor" href="#c-10" aria-hidden="true">#</a> C#10</h2><h3 id="global-using" tabindex="-1"><a class="header-anchor" href="#global-using" aria-hidden="true">#</a> global using</h3><p>\u82E5\u5275\u5EFA.net 6 \u6846\u67B6\u7684\u5C08\u6848\u6642\uFF0C<strong>ImplicitUsings</strong> \u6703\u9ED8\u8A8D\u958B\u555F\uFF0C</p><p>\u6211\u5011\u53EF\u4EE5\u5728 .csproj \u88E1\u9762\u770B\u5230 <strong>ImplicitUsings</strong> \u6703\u662F <strong>enable</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;Project Sdk=&quot;Microsoft.NET.Sdk.Web&quot;&gt;
  &lt;PropertyGroup&gt;
    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt;
    &lt;Nullable&gt;enable&lt;/Nullable&gt;
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;
  &lt;/PropertyGroup&gt;
&lt;/Project&gt;
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">\xA0</div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="namespace-\u7A7A\u9593\u5F62\u5F0F\u8B8A\u66F4" tabindex="-1"><a class="header-anchor" href="#namespace-\u7A7A\u9593\u5F62\u5F0F\u8B8A\u66F4" aria-hidden="true">#</a> namespace \u7A7A\u9593\u5F62\u5F0F\u8B8A\u66F4</h3><p>\u539F\u672C\u7684 namespace \u6703\u9078\u5B9A\u7BC4\u570D</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">namespace</span> <span class="token namespace">MyNamespace</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73FE\u5728\u53EA\u9700\u6539\u7528\u65B0\u5F62\u5F0F\uFF0C\u4E0B\u5217\u6240\u6709\u5BA3\u544A\u90FD\u662F\u5BA3\u544A\u547D\u540D\u7A7A\u9593\u7684\u6210\u54E1</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">namespace</span> <span class="token namespace">MyNamespace</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="lambda-\u904B\u7B97\u5F0F\u6539\u5584" tabindex="-1"><a class="header-anchor" href="#lambda-\u904B\u7B97\u5F0F\u6539\u5584" aria-hidden="true">#</a> Lambda \u904B\u7B97\u5F0F\u6539\u5584</h3><p>C# 9 \u53CA\u4EE5\u524D\u82E5\u8981\u7528Lambda\u5247\u8981\u5BEB\u5B9A\u5F37\u884C\u5225\u8B8A\u6578</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// C#9</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token class-name">Func<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> welcome <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;Welcome to Lambda Improvements&quot;</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>welcome<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u82E5\u662F\u5230 C#10 \u5247\u53EF\u4EE5\u7531\u5F8C\u5F80\u524D\u63A8\u65B7\u8B8A\u6578\u985E\u578B</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// C#10</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> welcome <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;Welcome to Lambda Improvements&quot;</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>welcome<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u5206\u4EAB\u5230\u6B64\u7D50\u675F\uFF0C\u611F\u8B1D\u6536\u770B\u{1F60A}\u{1F60A}</p><h2 id="\u53C3\u8003\u6587\u737B" tabindex="-1"><a class="header-anchor" href="#\u53C3\u8003\u6587\u737B" aria-hidden="true">#</a> \u53C3\u8003\u6587\u737B</h2>`,24),_={href:"https://learn.microsoft.com/zh-tw/dotnet/csharp/whats-new/csharp-9",target:"_blank",rel:"noopener noreferrer"},f=s("https://learn.microsoft.com/zh-tw/dotnet/csharp/whats-new/csharp-9"),N={href:"https://learn.microsoft.com/zh-tw/dotnet/csharp/whats-new/csharp-10",target:"_blank",rel:"noopener noreferrer"},x=s("https://learn.microsoft.com/zh-tw/dotnet/csharp/whats-new/csharp-10"),C={href:"https://rainmakerho.github.io/2020/12/31/NewIn-CSharp9-NET5/",target:"_blank",rel:"noopener noreferrer"},L=s("https://rainmakerho.github.io/2020/12/31/NewIn-CSharp9-NET5/"),P={href:"https://www.huanlintalk.com/2022/02/csharp10-global-using.html",target:"_blank",rel:"noopener noreferrer"},S=s("https://www.huanlintalk.com/2022/02/csharp10-global-using.html");function W(q,F){const a=o("ExternalLinkIcon");return c(),i("div",null,[r,u,d,n("p",null,[k,n("a",m,[h,e(a)]),v]),b,n("p",null,[n("a",g,[w,e(a)])]),y,n("p",null,[n("a",_,[f,e(a)]),n("a",N,[x,e(a)]),n("a",C,[L,e(a)]),n("a",P,[S,e(a)])])])}const T=p(l,[["render",W],["__file","2022-10-19-CSharpVersion.html.vue"]]);export{T as default};
